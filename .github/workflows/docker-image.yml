name: Docker Image CI

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #DEPLOY_PACKAGE_NAME: ${{ secrets. }}
  DEPLOY_PACKAGE_NAME: deploy.zip
  AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
  EB_APPLICATION_NAME: ${{ secrets.EB_APPLICATION_NAME }}
  EB_APP_ENV_NAME: ${{ secrets.EB_APP_ENV_NAME }}
  AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: |-
          echo Building Image and running Tests
          docker build . --file Dockerfile.dev --tag sanim16/docker-react
          docker run -e CI=true sanim16/docker-react npm run test -- --coverage
          echo Finished running tests
      #working-directory: ./ ##not required as file is in the main directory
  deploy-to-elasticbeanstalk:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
      
      - name: Generate deployment package by compressing build to ZIP file
        run: zip -r deploy.zip . -x '*.git*'
        #zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x '*.git*'  ##used to replace the zip command above with variable name
        ##instead of hardcoding name
        
        
      - name: Copy files to the test website with the AWS CLI
        run: |
          aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.AWS_BUCKET_NAME }}
          
      - name: Create new ElasticBeanStalk Version
        run: |
          aws elasticbeanstalk create-application-version --application-name ${{ env.EB_APPLICATION_NAME }} --version-label "Ver-${{ github.sha }}" --description "${{ github.sha }}" --source-bundle S3Bucket=${{ env.AWS_BUCKET_NAME }},S3Key=${{ env.DEPLOY_PACKAGE_NAME }} --auto-create-application
      
      - name: deploy new version to EBS
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_APP_ENV_NAME }} --version-label "Ver-${{ github.sha }}"
